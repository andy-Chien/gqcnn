FROM nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04

MAINTAINER Andy Chien <808790017@gms.tku.edu.tw>

# Args
# `work_dir` must be an absolute path.
ARG work_dir=/home/docker/gqcnn_ws/src
ARG home_dir=/home/docker
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Taipei

RUN apt-get update && \
        apt-get -y install sudo

RUN useradd -m docker && echo "docker:docker" | chpasswd && adduser docker sudo

# Install `apt-get` deps.
RUN apt-get update && apt-get install -y \
        lsb-release \
        build-essential \
        python3 \
        python3-dev \
        python3-tk \
        python-opengl \
        curl \
        libsm6 \
        libxext6 \
        libglib2.0-0 \
        libxrender1 \
        wget \
        unzip \
        vim

# Install ROS
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
        curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \
        apt-get update && apt-get install -y ros-noetic-ros-base \
        python3-rosdep \
        python3-rosinstall \
        python3-rosinstall-generator \
        python3-wstool build-essential && \
        alias python=python3 && \
        ln -s /usr/bin/python3 /usr/bin/python && \
        echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc

# Install FlexBE
RUN apt-get install -y ros-noetic-flexbe-behavior-engine

# Install libspatialindex (required for latest rtree).
RUN curl -L https://github.com/libspatialindex/libspatialindex/releases/download/1.9.3/spatialindex-src-1.9.3.tar.gz | tar xz && \
    cd spatialindex-src-1.9.3 && \
    cmake . && \
    make && \
    make install && \
    ldconfig && \
    cd .. && rm -r spatialindex-src-1.9.3

# Change user and make working directory.
USER docker
WORKDIR ${home_dir}
ENV PATH="${home_dir}/.local/bin:${PATH}"

# Install pip (`apt-get install python-pip` causes trouble w/ networkx).
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
	python get-pip.py && \
	rm get-pip.py

# Required for easy_install to find right skimage version.
RUN pip install -U testresources setuptools

# Copy the library.
ADD docker/gqcnn.tar ${work_dir}/.
WORKDIR ${work_dir}

# This is because `python setup.py develop` skips install_requires (I think) and also because we want to explicitly use the GPU requirements.
RUN pip install -r gqcnn/requirements/gpu_requirements.txt
RUN pip install nvidia-pyindex
RUN pip install --use-deprecated=html5lib nvidia-tensorflow[horovod]
RUN pip install nvidia-tensorboard==1.15
RUN pip install Pillow==8.3.2
RUN pip install tifffile==2021.11.2
RUN pip install imageio==2.14.1

# Install the library in editable mode because it's more versatile (in case we want to develop or if users want to modify things)
# Keep the egg outside of the library in site-packages in case we want to mount the library (overwriting it) for development with docker
# USER root
# ENV PYTHONPATH ${work_dir}/gqcnn
# WORKDIR /usr/local/lib/python3.8/site-packages/
# RUN python ${work_dir}/gqcnn/setup.py develop --docker
# USER docker

# Move to the base library dir
WORKDIR ${work_dir}/..
